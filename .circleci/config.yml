version: 2.1

install_hex_rebar: &install_hex_rebar
  run:
    name: Install hex and rebar
    command: |
      mix local.hex --force
      mix local.rebar --force
install_nerves_bootstrap: &install_nerves_bootstrap
  run:
    name: Install nerves_bootstrap
    command: |
      mix archive.install hex nerves_bootstrap "~> 1.0" --force
install_ghr: &install_ghr
  run:
    name: Install ghr (Github Releases)
    command: |
      wget https://github.com/tcnksm/ghr/releases/download/v0.9.0/ghr_v0.9.0_linux_amd64.tar.gz
      tar xf ghr_v0.9.0_linux_amd64.tar.gz
      ln -sf ghr_v0.9.0_linux_amd64/ghr .

jobs:
  build:
    docker:
      - image: tmecklem/elixir:1.8.1-node-browsers-scenic
        environment:
          MIX_ENV: test

    steps:
      - checkout
      - <<: *install_hex_rebar
      - <<: *install_nerves_bootstrap

      - run:
          name: "ELIXIR_VERSION.lock"
          command: echo "${ELIXIR_VERSION}" > ELIXIR_VERSION.lock
      - run:
          name: "OTP_VERSION.lock"
          command: echo "${OTP_VERSION}" > OTP_VERSION.lock

      # makerion
      - restore_cache:
          keys:
            - v2-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion/mix.lock" }}
            - v2-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
      - run:
          name: Compile Makerion
          command: mix do deps.get, compile
          working_directory: ~/project/makerion
      - save_cache:
          key: v2-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion/mix.lock" }}
          paths:
            - makerion/deps
            - makerion/_build
      - save_cache:
          key: v2-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
          paths:
            - makerion/deps
            - makerion/_build

      # makerion_web
      - restore_cache:
          keys:
            - v2-web-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion_web/mix.lock" }}
            - v2-web-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
      - run:
          name: Compile Makerion Web
          command: mix do deps.get, compile
          working_directory: ~/project/makerion_web
      - run:
          name: generate static assets
          command: npm install && npm run deploy
          working_directory: ~/project/makerion_web/assets
      - run:
          name: phx.digest
          command: mix phx.digest
          working_directory: ~/project/makerion_web
      - save_cache:
          key: v2-web-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion_web/mix.lock" }}
          paths:
            - makerion_web/deps
            - makerion_web/_build
            - makerion_web/priv/static
      - save_cache:
          key: v2-web-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
          paths:
            - makerion_web/deps
            - makerion_web/_build
            - makerion_web/priv/static

      # makerion_kiosk
      - restore_cache:
          keys:
            - v2-kiosk-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion_kiosk/mix.lock" }}
            - v2-kiosk-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
      - run:
          name: Compile Makerion Kiosk
          command: mix do deps.get, compile
          working_directory: ~/project/makerion_kiosk
      - save_cache:
          key: v2-kiosk-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion_kiosk/mix.lock" }}
          paths:
            - makerion_kiosk/deps
            - makerion_kiosk/_build
      - save_cache:
          key: v2-kiosk-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
          paths:
            - makerion_kiosk/deps
            - makerion_kiosk/_build

      # makerion_firmware
      - restore_cache:
          keys:
            - v2-firmware-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion_firmware/mix.lock" }}
            - v2-firmware-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
      - run:
          name: Compile Makerion Firmware
          command: mix do deps.get, compile
          working_directory: ~/project/makerion_firmware
      - save_cache:
          key: v2-firmware-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion_firmware/mix.lock" }}
          paths:
            - makerion_firmware/deps
            - makerion_firmware/_build
      - save_cache:
          key: v2-firmware-mix-compile-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
          paths:
            - makerion_firmware/deps
            - makerion_firmware/_build

      - persist_to_workspace:
          root: .
          paths:
            - .circleci
            - .dialyzer-ignore.exs
            - .git
            - .gitignore
            - ELIXIR_VERSION.lock
            - OTP_VERSION.lock
            - makerion
            - makerion_firmware
            - makerion_kiosk
            - makerion_web

  test:
    parameters:
      project_name:
        description: "project name"
        type: string
    docker:
      - image: tmecklem/elixir:1.8.1-node-browsers-scenic
        environment:
          MIX_ENV: test

    steps:
      - attach_workspace:
          at: .
      - <<: *install_hex_rebar
      - <<: *install_nerves_bootstrap

      - run:
         name: Start Chrome Driver
         command: /usr/local/bin/chromedriver
         background: true
      - run:
          name: Create Test Database
          command: mix do ecto.create, ecto.migrate
          working_directory: ~/project/makerion
      - run:
          name: mix test
          command: mix coveralls.html
          working_directory: ~/project/<< parameters.project_name >>

      - store_artifacts:
          path: << parameters.project_name >>/cover/excoveralls.html
      - store_test_results:
          path: << parameters.project_name >>/_build/test/junit

  dialyzer:
    parameters:
      project_name:
        description: "project name"
        type: string
    docker:
      - image: tmecklem/elixir:1.8.1-node-browsers-scenic
        environment:
          MIX_ENV: test
    steps:
      - attach_workspace:
          at: .
      - <<: *install_hex_rebar
      - <<: *install_nerves_bootstrap

      - restore_cache:
          keys:
            - v2-<< parameters.project_name >>-mix-dialyzer-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "<< parameters.project_name >>/mix.lock" }}
            - v2-<< parameters.project_name >>-mix-dialyzer-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}

      - run:
          command: mix dialyzer --plt
          working_directory: ~/project/<< parameters.project_name >>
          no_output_timeout: 20m

      - save_cache:
          key: v2-<< parameters.project_name >>-mix-dialyzer-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "<< parameters.project_name >>/mix.lock" }}
          paths:
            - << parameters.project_name >>/priv/plts
      - save_cache:
          key: v2-<< parameters.project_name >>-mix-dialyzer-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
          paths:
            - << parameters.project_name >>/priv/plts

      - run:
          command: mix dialyzer --halt-exit-status
          working_directory: ~/project/<< parameters.project_name >>
          no_output_timeout: 20m

  credo:
    parameters:
      project_name:
        description: "project name"
        type: string
    docker:
      - image: tmecklem/elixir:1.8.1-node-browsers-scenic
        environment:
          MIX_ENV: test
    steps:
      - attach_workspace:
          at: .
      - <<: *install_hex_rebar
      - run:
          command: mix credo --strict
          working_directory: ~/project/<< parameters.project_name >>

  release_firmware:
    parameters:
      mix_target:
        type: string
    docker:
      - image: tmecklem/elixir:1.8.1-node-browsers-scenic
        environment:
          MIX_TARGET: << parameters.mix_target >>
    steps:
      - checkout
      - <<: *install_hex_rebar
      - <<: *install_nerves_bootstrap
      - <<: *install_ghr

      - run:
          name: "ELIXIR_VERSION.lock"
          command: echo "${ELIXIR_VERSION}" > ELIXIR_VERSION.lock
      - run:
          name: "OTP_VERSION.lock"
          command: echo "${OTP_VERSION}" > OTP_VERSION.lock

      - restore_cache:
          keys:
            - v2-<< parameters.mix_target >>-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
            - v2-<< parameters.mix_target >>-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion/mix.lock" }}
            - v2-<< parameters.mix_target >>-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
      - run:
          command: mix deps.get
          working_directory: ~/project/makerion_firmware
      - run:
          command: mix compile
          working_directory: ~/project/makerion_firmware
      - save_cache:
          key: v2-<< parameters.mix_target >>-{{ .Revision }}-{{ .Environment.CIRCLE_TAG }}
          paths:
            - makerion_firmware/deps
            - makerion_firmware/_build
      - save_cache:
          key: v2-<< parameters.mix_target >>-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}-{{ checksum "makerion/mix.lock" }}
          paths:
            - makerion_firmware/deps
            - makerion_firmware/_build
      - save_cache:
          key: v2-<< parameters.mix_target >>-{{ checksum "OTP_VERSION.lock" }}-{{ checksum "ELIXIR_VERSION.lock" }}
          paths:
            - makerion_firmware/deps
            - makerion_firmware/_build
      - run:
          command: mkdir -p makerion_firmware/deploy
      - run:
          command: mix do firmware, firmware.image
          working_directory: ~/project/makerion_firmware
      - run:
          command: cp ~/project/makerion_firmware/_build/<< parameters.mix_target >>_dev/nerves/images/makerion_firmware.fw ~/project/makerion_firmware/deploy/makerion_firmware_<< parameters.mix_target >>.fw
          working_directory: ~/project/makerion_firmware
      - run:
          command: cp ~/project/makerion_firmware/makerion_firmware.img ~/project/makerion_firmware/deploy/makerion_firmware_<< parameters.mix_target >>.img
          working_directory: ~/project/makerion_firmware
      - run:
          name: Deploy artifacts to GitHub
          command: ./ghr -draft -t $GITHUB_TOKEN -u $CIRCLE_PROJECT_USERNAME -r $CIRCLE_PROJECT_REPONAME $CIRCLE_TAG ~/project/makerion_firmware/deploy

workflows:
  version: 2
  primary:
    jobs:
      - build:
          filters:
            tags:
              only: /v.*/
      - test:
          project_name: makerion
          name: makerion_test
          requires:
            - build
          filters:
            tags:
              only: /v.*/
      - credo:
          project_name: makerion
          name: makerion_credo
          requires:
            - build
          filters:
            tags:
              only: /v.*/
      - dialyzer:
          project_name: makerion
          name: makerion_dialyzer
          requires:
            - makerion_credo
            - makerion_test
          filters:
            tags:
              only: /v.*/

      - test:
          project_name: makerion_kiosk
          name: kiosk_test
          requires:
            - build
          filters:
            tags:
              only: /v.*/
      - credo:
          project_name: makerion_kiosk
          name: kiosk_credo
          requires:
            - build
          filters:
            tags:
              only: /v.*/
      - dialyzer:
          project_name: makerion_kiosk
          name: kiosk_dialyzer
          requires:
            - kiosk_credo
            - kiosk_test
          filters:
            tags:
              only: /v.*/

      - test:
          project_name: makerion_web
          name: web_test
          requires:
            - build
          filters:
            tags:
              only: /v.*/
      - credo:
          project_name: makerion_web
          name: web_credo
          requires:
            - build
          filters:
            tags:
              only: /v.*/
      - dialyzer:
          project_name: makerion_web
          name: web_dialyzer
          requires:
            - web_credo
            - web_test
          filters:
            tags:
              only: /v.*/

      - test:
          project_name: makerion_firmware
          name: firmware_test
          requires:
            - build
          filters:
            tags:
              only: /v.*/
      - credo:
          project_name: makerion_firmware
          name: firmware_credo
          requires:
            - build
          filters:
            tags:
              only: /v.*/
      - dialyzer:
          project_name: makerion_firmware
          name: firmware_dialyzer
          requires:
            - firmware_credo
            - firmware_test
          filters:
            tags:
              only: /v.*/

      - release_firmware:
          name: release_rpi0
          mix_target: rpi0
          requires:
            - makerion_credo
            - makerion_test
            - kiosk_credo
            - kiosk_test
            - web_credo
            - web_test
            - firmware_credo
            - firmware_test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
      - release_firmware:
          name: release_rpi3
          mix_target: rpi3
          requires:
            - makerion_credo
            - makerion_test
            - kiosk_credo
            - kiosk_test
            - web_credo
            - web_test
            - firmware_credo
            - firmware_test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v.*/
